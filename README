Nome: Matheus T. de Laurentys
NUSP: 9793714

Feito individualmente

Parte I: Esfera Polar
 - Feita de maneira a nao repetir a criacao de nunhum vertice
 - Gera todos os vertices 
 - Cria um mapa de um par (i,j) -> (ind, (uv)),
    + ind e o indice do vertice correspondente ao par
    + (uv) e o par que corresponde a posicao do vertice no plano uv
 - Cria a esfera adicionando os vertices mapeados ao vetor
 - Normais sao iguais ao vertices 
 - Nenhuma mudanca nos shaders

Parte II: Esfera Tesselagem
 - Utiliza o codigo base para geracao do icosaedro
 - Utiliza dois QOpenGLShaderProgram
    + Tesselagem com luz
    + Tesselagem sem luz
 - O raio foi adicionado apenas ao TCS, nao ao codigo base do icosaedro
 - Calculos de posicao na tela feitos no TCS
 - Estao implementadas as composicoes
    + Sem luz
    + Com cores
      * Flat
      * Nao-Flat
    + Sem cores
      * Flat
      * Nao-Flat
 - Pares uv estao implementados na composicao "_subdivTessalationShader"
    + Coordenadas iniciais criadas junto aos vertices do icosaedro base
    + O calculo comeca no TCS e termina no TES... (nao sei como mostrar os valores)
      * si_tcs()
      * si_tes()

Como navegar:
- Cenas com tres esferas posicionadas de diferentes argumentos:
    + Linha 155~ de Renderer.py
      * Selecionar a opcao desejada
        # SCENE = 0 #polar spheres
        # SCENE = 1 #tessalation spheres
    + Codigo escrito
      * Todo o trabalho feito esta em:
        # SpherePolar.py
        # SphereIcos.py
        # Shaders.py
          { Nomes de composicoes abreviados

O que NAO funciona:
 - Solid Wireframe com cor (usando tessalation)
 - Ha uma sensacao estranha com a cor na versao sem luz. Nao sei ao certo o que acontece, mas fica
    bastante escuro.
 Obs: Eu nao sei por que eles ocorre, se nao teria corrigido oss problemas